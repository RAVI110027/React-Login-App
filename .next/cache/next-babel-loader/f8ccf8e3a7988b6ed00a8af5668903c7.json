{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Link from 'next/link';\nimport Input from '../input/index';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      signUp: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      errors: {}\n    });\n\n    _defineProperty(this, \"schema\", {\n      firstName: Joi.string().required().label('First Name'),\n      lastName: Joi.string().required(),\n      email: Joi.string().required(),\n      password: Joi.string().required(),\n      confirmPassword: Joi.string().required()\n    });\n\n    _defineProperty(this, \"validate\", () => {\n      const options = {\n        abortEarly: false\n      };\n      const result = Joi.validate(this.state.signUp, this.schema, options);\n      if (!result.error) return null;\n      const errors = {};\n\n      for (let item of result.error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    });\n\n    _defineProperty(this, \"validateProperty\", ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return; //Call to Server \n\n      console.log(\"SignUp Form Submitted\");\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const errors = _objectSpread({}, this.state.errors);\n\n      const errorMessage = this.validateProperty(e.currentTarget);\n      if (errorMessage) errors[e.currentTarget.name] = errorMessage;else delete errors[e.currentTarget.name];\n\n      const signUp = _objectSpread({}, this.state.signUp);\n\n      signUp[e.currentTarget.name] = e.currentTarget.value;\n      this.setState({\n        signUp,\n        errors\n      });\n    });\n\n    _defineProperty(this, \"handleSignUp\", () => {\n      console.log(\"First Name: \" + this.state.signUp.firstName);\n      console.log(\"Last Name: \" + this.state.signUp.lastName);\n      console.log(\"Email: \" + this.state.signUp.email);\n      console.log(\"Password: \" + this.state.signUp.password);\n      console.log(\"Confirm Password: \" + this.state.signUp.confirmPassword);\n    });\n  }\n\n  render() {\n    const {\n      signUp,\n      errors\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"h1\", {\n      className: \"text-center\"\n    }, \"SignUp Page\"), __jsx(\"form\", {\n      onSubmit: this.handleSubmit\n    }, __jsx(Input, {\n      name: \"firstName\",\n      value: signUp.firstName,\n      label: \"First Name\",\n      onChange: this.handleChange,\n      error: errors.firstName\n    }), __jsx(Input, {\n      name: \"lastName\",\n      value: signUp.lastName,\n      label: \"Last Name\",\n      onChange: this.handleChange,\n      error: errors.lastName\n    }), __jsx(Input, {\n      name: \"email\",\n      value: signUp.email,\n      label: \"Email Id\",\n      onChange: this.handleChange\n    }), __jsx(Input, {\n      name: \"password\",\n      value: signUp.password,\n      label: \"Password\",\n      type: \"password\",\n      onChange: this.handleChange\n    }), __jsx(Input, {\n      name: \"confirmPassword\",\n      value: signUp.confirmPassword,\n      label: \"Confirm Password\",\n      onChange: this.handleChange\n    }), __jsx(Link, {\n      href: \"/login\"\n    }, __jsx(\"button\", {\n      disabled: this.validate(),\n      type: \"submit\",\n      className: \"btn btn-primary\"\n    }, \"Submit [Real]\")), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleSignUp\n    }, \"Submit For Data\"), __jsx(Link, {\n      href: \"/login\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\"\n    }, \"Already A Member\")))));\n  }\n\n}\n\nexport default SignUp; // state = {\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     password: '',\n//     confirmPassword:'' \n// };  \n//   handleChange= event => {\n//     this.setState({[event.target.name]: event.target.value});\n//  }\n//   handleSignUp = () => {\n//     console.log(\"First Name: \" + this.state.firstName);\n//     console.log(\"Last Name: \" + this.state.lastName);\n//     console.log(\"Email: \" + this.state.email);\n//     console.log(\"Password: \" + this.state.password);\n//     console.log(\"Confirm Password: \" + this.state.confirmPassword);\n//  }","map":{"version":3,"sources":["/Users/ravi.shankar/Documents/POC/React-With-Server/components/signup/index.js"],"names":["React","Joi","Link","Input","SignUp","Component","signUp","firstName","lastName","email","password","confirmPassword","errors","string","required","label","options","abortEarly","result","validate","state","schema","error","item","details","path","message","name","value","obj","e","preventDefault","setState","console","log","errorMessage","validateProperty","currentTarget","render","handleSubmit","handleChange","handleSignUp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Joi from 'joi-browser';\nimport Link from 'next/link';\nimport Input from '../input/index';\n\nclass SignUp extends React.Component {\n\n          state = {\n              signUp:{\n                  firstName: '',\n                  lastName: '',\n                  email: '',\n                  password: '',\n                  confirmPassword:''\n                },\n              errors: {}  \n          };   \n        \n          schema = {\n              firstName: Joi.string().required().label('First Name'),\n              lastName: Joi.string().required(),\n              email: Joi.string().required(), \n              password: Joi.string().required(),\n              confirmPassword: Joi.string().required()\n          };\n\n          validate = () =>{\n              const options = { abortEarly : false};\n              const result = Joi.validate(this.state.signUp, this.schema, options);\n                  if(!result.error) return null;\n              \n              const errors= {};\n                  for (let item of result.error.details)\n                    errors[item.path[0]] = item.message;\n              return errors;\n          };\n\n          validateProperty = ({name, value}) =>{\n              const obj ={ [name]: value };\n              const schema ={ [name]: this.schema[name] };\n              const {error} =Joi.validate(obj, schema);\n              return error ? error.details[0].message : null;\n          };\n\n          handleSubmit= e =>{\n              e.preventDefault();\n              const errors = this.validate();\n              this.setState({errors: errors || {} });\n                  if (errors) return;\n                //Call to Server \n              console.log(\"SignUp Form Submitted\");\n          }; \n\n          handleChange= e =>{\n              const errors = {...this.state.errors};\n              const errorMessage = this.validateProperty(e.currentTarget);\n              if (errorMessage) errors[e.currentTarget.name] = errorMessage;\n              else delete errors[e.currentTarget.name];\n\n              const signUp = {...this.state.signUp};\n              signUp[e.currentTarget.name] = e.currentTarget.value; \n              this.setState({signUp, errors});\n          };\n\n          handleSignUp = () => {\n              console.log(\"First Name: \" + this.state.signUp.firstName);\n              console.log(\"Last Name: \" + this.state.signUp.lastName);\n              console.log(\"Email: \" + this.state.signUp.email);\n              console.log(\"Password: \" + this.state.signUp.password);\n              console.log(\"Confirm Password: \" + this.state.signUp.confirmPassword);\n          };\n\n  render(){\n      const {signUp, errors} =this.state;\n\n      return (\n          <React.Fragment>\n              <div className=\"container\">\n                  <h1 className=\"text-center\">\n                      SignUp Page\n                  </h1>\n\n                <form onSubmit={this.handleSubmit}>\n                  <Input \n                      name=\"firstName\"\n                      value={signUp.firstName}\n                      label=\"First Name\"\n                      onChange={this.handleChange}\n                      error={errors.firstName}\n                  />\n\n                  <Input\n                      name=\"lastName\"\n                      value={signUp.lastName}\n                      label=\"Last Name\"\n                      onChange={this.handleChange}\n                      error={errors.lastName}\n                  />\n\n                  <Input\n                      name=\"email\"\n                      value={signUp.email}\n                      label=\"Email Id\"\n                      onChange={this.handleChange}\n                  />\n\n                  <Input\n                      name=\"password\"\n                      value={signUp.password}\n                      label=\"Password\"\n                      type=\"password\"\n                      onChange={this.handleChange}\n                  />\n\n                  <Input\n                      name=\"confirmPassword\"\n                      value={signUp.confirmPassword}\n                      label=\"Confirm Password\"\n                      onChange={this.handleChange}\n                  />\n\n                  <Link href=\"/login\">\n                      <button \n                          disabled={this.validate()}\n                          type=\"submit\" className=\"btn btn-primary\">Submit [Real]\n                      </button>\n                  </Link>\n                  <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSignUp}>\n                      Submit For Data\n                  </button>\n                  <Link href=\"/login\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                          Already A Member\n                      </button>\n                  </Link>\n                </form>\n              </div>\n          </React.Fragment>\n      );\n    }\n}\n\nexport default SignUp;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// state = {\n      //     firstName: '',\n      //     lastName: '',\n      //     email: '',\n      //     password: '',\n      //     confirmPassword:'' \n      // };  \n\n\n      //   handleChange= event => {\n  //     this.setState({[event.target.name]: event.target.value});\n  //  }\n\n//   handleSignUp = () => {\n//     console.log(\"First Name: \" + this.state.firstName);\n//     console.log(\"Last Name: \" + this.state.lastName);\n//     console.log(\"Email: \" + this.state.email);\n//     console.log(\"Password: \" + this.state.password);\n//     console.log(\"Confirm Password: \" + this.state.confirmPassword);\n//  }"]},"metadata":{},"sourceType":"module"}